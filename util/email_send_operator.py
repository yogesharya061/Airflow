from airflow.operators.email import EmailOperator


class EmailOperatorRefined(EmailOperator):
    """
    This class extends Airflow EmailOperator so that HTML content can be generated by function that accepts Airflow context.
    :param html_content: HTML content of the email.
    :type html_content: string or (context) -> string.
    :param files: List of filepaths to attach in email.
    :type files: list of str or None or (context) -> list of str
    :param dont_send_empty_email: Don't send mail if content is None or empty.
    :type dont_send_empty_email: bool
    """

    def __init__(self, html_content, *args, files=None, dont_send_empty_email=True, **kwargs):
        if callable(html_content):
            kwargs["html_content"] = ""
            self.html_content_var = html_content
        else:
            kwargs["html_content"] = html_content
        if callable(files):
            kwargs["files"] = None
            self.files_var = files
        else:
            kwargs["files"] = files
        super().__init__(*args, **kwargs)
        self.dont_send_empty_email = dont_send_empty_email

    def execute(self, context):
        if hasattr(self, "html_content_var"):
            self.html_content = self.html_content_var(context)
        if hasattr(self, "files_var"):
            self.files = self.files_var(context)
        if self.dont_send_empty_email and (self.html_content is None or len(self.html_content) == 0):
            print("*** No need to send an empty email. Skip email sending ***")
            return
        else:
            return super().execute(context)
